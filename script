---
title: "Futura survey notebook"
output:
  html_document:
    df_print: paged
---
# Data analysis Futura surveys

## Futura colours we will be using:
Pink: "#fc8b9b" 
Peach: "#F6BC65"
aruba blue: "#81d7d3"



```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(readr)
library(ggplot2)
library(Rmisc)
library(OpenStreetMap)
library(sf)
library(treemap)
library(waffle)
library(ggplot2)
```

```{r, message=FALSE, warning=FALSE}
#data set pertaining to survey of individuals
df<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/combined.csv")
df<-as_tibble(df)

GAC<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/GAC.csv", stringsAsFactors = FALSE)
GAC<-as_tibble(GAC)

#data set pertaining to survey of businesses
df_b<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/DE_BS.csv", stringsAsFactors = FALSE)
df_b<-as_tibble(df_b)

d_5.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/5.1.csv", stringsAsFactors = FALSE)
d_5.1<-as_tibble(d_5.1)

d_6.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/6.1.csv", stringsAsFactors = FALSE)
d_6.1<-as_tibble(d_6.1)

d_6.2<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/6.2.csv", stringsAsFactors = FALSE)
d_6.2<-as_tibble(d_6.2)

d_6.4<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/6.4.csv", stringsAsFactors = FALSE)
d_6.4<-as_tibble(d_6.4)


d_7.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/7.1.csv", stringsAsFactors = FALSE)
d_7.1<-as_tibble(d_7.1)



#requires uploading from the computer untill now have not been able to link to github
shape<- st_read("GAC_Regios_WGS1984.shp")
#To add the regions by colour
shape$region<- c("#fc8b9b","#ffffff","#ffffff","#ffffff","#ffffff","#F6BC65","#F6BC65","#ffffff")
#plot
ggplot() + 
geom_sf(data = shape, size = 0.1, color = "black", fill = shape$region) + 
coord_sf() + theme(panel.background = element_blank(),
                   axis.text.x=element_blank(), #remove x axis labels
        axis.ticks.x=element_blank(), #remove x axis ticks
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank()  #remove y axis ticks
                   )+ ggtitle("Figure X: Broadband divide")+ 
  labs(caption = "Source: Cornerstone Economics 2022")


```

```{r}
df          <- left_join(df,GAC,
                                    by=c("Street"="Straatnaam"))
df$x <- df$POINT_X
df$y <- df$POINT_Y
```

#Actual mapping
```{r}
# extract map
library(ggmap)

# maptype = c("terrain",
#  "terrain-background", "terrain-labels", "terrain-lines", "toner",
#  "toner-2010", "toner-2011", "toner-background", "toner-hybrid",
#  "toner-labels", "toner-lines", "toner-lite", "watercolor")

aruba <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-lite")

aruba1 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-background")

aruba2 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-background")

aruba3 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-labels")

aruba4 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-lines")

aruba5 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner")

aruba6 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-2010")

aruba7 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-2011")

aruba8 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-hybrid")

aruba9 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-labels")

aruba10 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-lines")

aruba11 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "watercolor")


ggmap(aruba) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba1) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba2) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba3) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba4) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba5) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )


ggmap(aruba6) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba7) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba8) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba9) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba10) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba11) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

```



## Variables
The following variables were prepared:

Nr.  | Variable                              | Code                             | Status     | Comment 
---- | ------------------------------------- | ------------------------------   | ---------- | ------------------
1    | Age range interval                    | age_range                        | Completed  |
2    | Status of completion                  | Completion                       | Pending    |
3    | x                                     | x                                | Pending    |




## Coalesce
```{r, message=False}
p1<- ggplot(df, aes(Age, fill=Gender))+
  geom_bar(stat="count")+
  theme_classic()

Age <- c("12-25","26-44","45-56","57-75","76-111")
Percentage <- c(24,26,19,26,5)

df_age <- data.frame(Age, Percentage)

p2<-ggplot(data=df_age, aes(x=Age, y=Percentage)) +
    geom_bar(colour="#fc8b9b", stat="identity")+
  theme_classic()
```

# gender
```{r}
p1<- df%>%
  filter(Gender !="Prefer not to disclose")%>%
  filter(Age !="")%>%
  ggplot(aes(Age, fill=Gender))+
  geom_bar(stat="count")+
  theme_classic()
```

```{r}
multiplot(p1, p2, cols=2)
```

```{r}
#only display two decimal places
options(digits=2)

prop.table(table(df$Education))

prop.table(table(df$Age))

prop.table(table(df$Internet_home_cable))

#calculate frequency table of proportions for position and points variable
prop.table(table(df$Age, df$Time))
```


# Individual survey indicator dimensions
## 5. Urban-rural broadband divide

San Nicolas
20/(26+7+20)*100=37.7% has no access to broadband at home

Noord / Tanki Leendert
28/(58+28)*100 = 32.6% has no access to broadband at home

Divide:
37.7%-32.6% = 5.1%

```{r}
table(df$Regio, df$Internet_home_cable)
table(df$Regio, df$Internet_home_no_access)
```


## Shape file 
```{r}

```

## 7. Uptake of digital government services
```{r}
table(df$Internet_Censo)
table(df$Internet_Setar)
table(df$Internet_SVB)
table(df$Internet_Tax_dep)
table(df$Internet_utilities)
table(df$Internet_Other)

df_y<- df%>%
  filter(Age!="76-111")
  
  
  
df_y$Internet_some <- ifelse(df_y$Internet_Censo=="Censo" | 
                       df_y$Internet_Setar=="Communication (Setar)"|
                       df_y$Internet_SVB=="Pension (SVB)" |
                       df_y$Internet_Tax_dep=="Tax department"|
                       df_y$Internet_utilities=="Utilities (WEB, ELMAR)",
                       "TRUE",
                       "FALSE"
)

table(df_y$Internet_some)
                       
```
8. 
No=126, yes=197
61% have made purchases online in the last 12 months

```{r}
table(df_y$Internet_purchase,df_y$Internet_some)
```


# 5. Society

## 5.1 Percentage of individuals aged 55-74 using the Internet

no - 21
yes - 364

no=21/(21+364)*100=5.5%
Yes = 1-5.5% = 94.5%

```{r}
table(df_y$access_internet_3_months)

ggplot(d_5.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 76.8, xend = Country, yend = Observations), colour=d_5.1$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(40, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 76.8, color = "black", size=0.5)
```


# Society

## 5.3 Women as a share of all 16–24-year-olds who can program

defined age group: 12-25

NO -female - 34
No -male - 25

YES - female - 16
YES - male - 15

Total female: 50
Total male: 40

Yes female: 16/50= 32%
Yes male: 15/40=  38%

```{r}
table(df$Age,df$Gender,df$Proficiency_coding)
```

## 5.4

Female: 201/(201+20)= 91%
Male: 171/(18+171)= 90%
Difference -1%

```{r}
table(df$Gender,df$access_internet_3_months)
```




# Trust

## 6.1
Percentage of Internet users experiencing abuse of personal information or privacy violations
No - 326
Yes - 28
Not an internet user - 31
tot - 354
28/354 = 7.9%


No - 331
Yes - 29
Not an internet user - 51
tot - 360
29/360=8.1%


```{r}
table(df_y$Experience_privacy_violations) # this is where old people are already filtered out
table(df$Experience_privacy_violations)

ggplot(d_6.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 3.4, xend = Country, yend = Observations), colour=d_6.1$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(0, 10) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 3.35, color = "black", size=0.5)
```


## 6.2
Percentage of individuals not buying online due to payment security concerns
```{r}
table(df$Internet_purchase_reason)

ggplot(d_6.2, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 27.2, xend = Country, yend = Observations), colour=d_6.2$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(0, 65) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 27.2, color = "black", size=0.5)
```

## 6.3 
Percentage of individuals not buying online due to concerns about returning products

Inconsistencies with very high observations in the OECD made me drop this from the analaysis. 
```{r}

```

## 6.4
Percentage of businesses in which ICT security and data protection tasks are mainly performed by own employees

No - 60
Yes - 74
No = 60/(60+74)= 45.0%
Yes 1-45% = 55%
```{r}
table(df_b$Are.the.ICT.security.and.data.protection.tasks.of.your.business.mainly.performed.by.own.employees.)

ggplot(d_6.4, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 23.7, xend = Country, yend = Observations), colour=d_6.4$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(15, 55) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 23.7, color = "black", size=0.5)
```




# Business survey manipulations

## Data cleaning
```{r}
df_b<- df_b%>%
  filter(CompletionStatus !="Partially Completed")


BUS_Select <- df_b%>%
  select(What.is.the.name.of.your.organization.,
         How.many.employees.does.your.business.employ.at.the.moment.,
         Which.sector.best.describes.your.principle.economic.activity.)
```

Micro | 1-10
Small | 11-50
Medium |51-250
Large |  >250

```{r}
# library
library(treemap)
 
# Create data
group <- c("Large 2.2%","Medium  4.5%","Small - 14.9%","Micro - 78.4%")
value <- c(2.2,4.5,14.9,78.4)
tm_data <- data.frame(group,value)
 
# treemap
treemap(tm_data,
            index="group",
            vSize="value",
            type="index",
        fontcolor.labels = "white",
        border.lwds = "2",
        border.col = "white",
        title="",
        palette = c("#fc8b9b","#F6BC65")
            )
```



```{r}
BUS_Select$type <- 
  ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment.>=0)&
           (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 10),
         "Micro", 
         ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. >= 11)&
                  (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 50),
                "Small",
                ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. >= 51) & (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 250),"Medium",
ifelse(BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. > 250,"Large","NA")
         )))

table(BUS_Select$type)

```
12


```{r}
df_b%>%
  filter(What.share.of.employees.are.considered..low.skilled..!=0"\)%>%
  mean(What.percentage.of.low.skilled.workers.receive.employment.based.training.)
```
Bussines Innovation question
new firms < 3 years.

25/(25+109)*100 = 19%
```{r}
df_b$new_firms <- ifelse(df_b$For.how.many.years.has.your.business.been.active.conducting.commercial.activity. < 3,"start-up","established")
table(df_b$new_firms)

new_old_firms <- c("start-up firms","established firms")
new_old_firms_values<-c(19,81)


new_old <- data.frame(
  State = c("start-up firms","established firms"),
  Values = c(19,81),
  stringsAsFactors = FALSE)
```

Waffle chart
```{r}
Blue.text <- element_text(color = "#00006f")
```


```{r}
plot_new_old <- ggplot(data = new_old, 
         aes(fill = State, values = Values)) +
  geom_waffle(n_rows = 10, size = 0.5, 
              colour ="#ffffff",
              flip = TRUE) +
  scale_fill_manual(values = c("#e7bd42","#00006f")) +
  coord_equal() +
  theme_minimal() +
  theme_enhance_waffle() +
  labs(title = "% Share new start-ups",
       subtitle = "N=134",
       caption = "Cornerstone Economics (2022)")+
   theme(title = Blue.text, axis.title = Blue.text,text=element_text(family="Franklin Gothic Book"),legend.title = element_blank()
         )
```

Does your business digitally deliver services?
```{r}
table(df_b$Does.your.business.digitally.deliver.services.across.borders.)
```

## 7.1
```{r}
ggplot(d_7.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 44, xend = Country, yend = Observations), colour=d_7.1$X, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(20, 70) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 44, color = "black", size=0.5)
```



```{r}
write.csv(BUS_Select,"BUS_Select.csv", row.names = FALSE)
```
