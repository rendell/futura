---
title: "Futura survey notebook"
output:
  html_document:
    df_print: paged
---
# Data analysis Futura surveys

## Futura colours we will be using:
Pink: "#fc8b9b" 
Peach: "#F6BC65"
aruba blue: "#81d7d3"



```{r, message=FALSE, warning=FALSE, eval=FALSE}
library(tidyverse)
library(readr)
library(ggplot2)
library(Rmisc)
library(OpenStreetMap)
library(sf)
library(treemap)
library(waffle)
library(ggplot2)
```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
#data set pertaining to survey of individuals
df<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/combined.csv")
df<-as_tibble(df)

GAC<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/GAC.csv", stringsAsFactors = FALSE)
GAC<-as_tibble(GAC)

#data set pertaining to survey of businesses
df_b<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/DE_BS.csv", stringsAsFactors = FALSE)%>% 
  as_tibble()%>%
  filter(CompletionStatus=="Completed")

d_1.2<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/1.2.csv", stringsAsFactors = FALSE)
d_1.2<-as_tibble(d_1.2)

d_1.3<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/1.3.csv", stringsAsFactors = FALSE)
d_1.3<-as_tibble(d_1.3)

d_2.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/2.1.csv", stringsAsFactors = FALSE)
d_2.1<-as_tibble(d_2.1)

d_2.2<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/2.2.csv", stringsAsFactors = FALSE)
d_2.2<-as_tibble(d_2.2)

d_2.3<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/2.3.csv", stringsAsFactors = FALSE)
d_2.3<-as_tibble(d_2.3)

d_2.4<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/2.4.csv", stringsAsFactors = FALSE)
d_2.4<-as_tibble(d_2.4)

d_2.5<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/2.5.csv", stringsAsFactors = FALSE)
d_2.5<-as_tibble(d_2.5)

d_2.5_A<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/2.5_A.csv", stringsAsFactors = FALSE)
d_2.5_A<-as_tibble(d_2.5_A)

d_3.2<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/3.2.csv", stringsAsFactors = FALSE)
d_3.2<-as_tibble(d_3.2)

d_4.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/4.1.csv", stringsAsFactors = FALSE)
d_4.1<-as_tibble(d_4.1)

d_5.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/5.1.csv", stringsAsFactors = FALSE)
d_5.1<-as_tibble(d_5.1)

d_6.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/6.1.csv", stringsAsFactors = FALSE)
d_6.1<-as_tibble(d_6.1)

d_6.2<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/6.2.csv", stringsAsFactors = FALSE)
d_6.2<-as_tibble(d_6.2)

d_6.4<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/6.4.csv", stringsAsFactors = FALSE)
d_6.4<-as_tibble(d_6.4)


d_7.1<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/7.1.csv", stringsAsFactors = FALSE)
d_7.1<-as_tibble(d_7.1)
```

```{r, eval=FALSE, include=FALSE}
#requires uploading from the computer untill now have not been able to link to github
shape<- st_read("GAC_Regios_WGS1984.shp")
#To add the regions by colour
shape$region<- c("#fc8b9b","#ffffff","#ffffff","#ffffff","#ffffff","#F6BC65","#F6BC65","#ffffff")
#plot
ggplot() + 
geom_sf(data = shape, size = 0.1, color = "black", fill = shape$region) + 
coord_sf() + theme(panel.background = element_blank(),
                   axis.text.x=element_blank(), #remove x axis labels
        axis.ticks.x=element_blank(), #remove x axis ticks
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank()  #remove y axis ticks
                   )+ ggtitle("Figure X: Broadband divide")+ 
  labs(caption = "Source: Cornerstone Economics 2022")
```



```{r,eval=FALSE}
df          <- left_join(df,GAC,
                                    by=c("Street"="Straatnaam"))
df$x <- df$POINT_X
df$y <- df$POINT_Y
```

#Actual mapping
```{r, eval=FALSE}
# extract map
library(ggmap)

# maptype = c("terrain",
#  "terrain-background", "terrain-labels", "terrain-lines", "toner",
#  "toner-2010", "toner-2011", "toner-background", "toner-hybrid",
#  "toner-labels", "toner-lines", "toner-lite", "watercolor")

aruba <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-lite")

aruba1 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-background")

aruba2 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-background")

aruba3 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-labels")

aruba4 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-lines")

aruba5 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner")

aruba6 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-2010")

aruba7 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-2011")

aruba8 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-hybrid")

aruba9 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-labels")

aruba10 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-lines")

aruba11 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "watercolor")


ggmap(aruba) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba1) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba2) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba3) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba4) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba5) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )


ggmap(aruba6) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba7) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba8) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba9) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba10) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba11) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

```

## Coalesce
```{r, message=FALSE, eval=FALSE}
p1<- ggplot(df, aes(Age, fill=Gender))+
  geom_bar(stat="count")+
  theme_classic()

Age <- c("12-25","26-44","45-56","57-75","76-111")
Percentage <- c(24,26,19,26,5)

df_age <- data.frame(Age, Percentage)

p2<-ggplot(data=df_age, aes(x=Age, y=Percentage)) +
    geom_bar(colour="#fc8b9b", stat="identity")+
  theme_classic()
```

# gender
```{r, eval=FALSE}
p1<- df%>%
  filter(Gender !="Prefer not to disclose")%>%
  filter(Age !="")%>%
  ggplot(aes(Age, fill=Gender))+
  geom_bar(stat="count")+
  theme_classic()
```

```{r, eval=FALSE}
multiplot(p1, p2, cols=2)
```

```{r, eval=FALSE}
#only display two decimal places
options(digits=2)

prop.table(table(df$Education))

prop.table(table(df$Age))

prop.table(table(df$Internet_home_cable))

#calculate frequency table of proportions for position and points variable
prop.table(table(df$Age, df$Time))
```

8. 
No=126, yes=197
61% have made purchases online in the last 12 months

```{r, eval=FALSE}
table(df_y$Internet_purchase,df_y$Internet_some)
```

# Access

## 1.2 Share of households with broadband connection
interpretation:


308+2+3+3+2+7=325
total: 45+2+308+3+3+2+15+7=385
325/385=84%
```{r, eval=FALSE}
table(df_y$Internet_home_cable)
```

```{r, eval=FALSE}
ggplot(d_1.2, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 86.6, xend = Country, yend = Observations), colour=d_1.2$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(50, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 86.6, color = "black", size=0.5)
```

Does your business have a broadband connection?
```{r}
prop.table(table(df_b$Does.your.business.have.its.own.broadband.internet.connection.))
```



## 1.3 Disparity in broadband uptake between urban and rural households

San Nicolas
20/(26+7+20)*100=37.7% has no access to broadband at home

Noord / Tanki Leendert
28/(58+28)*100 = 32.6% has no access to broadband at home

Divide:
37.7%-32.6% = 5.1%

```{r, eval=FALSE}
table(df$Regio, df$Internet_home_cable)
table(df$Regio, df$Internet_home_no_access)
```

```{r, eval=FALSE}
ggplot(d_1.3, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 8.1, xend = Country, yend = Observations), colour=d_1.3$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(-5, 30) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 8.1, color = "black", size=0.5)
```



## 1.4 Share of businesses with broadband contracted speed of 30 Mbps or more
no - 42
yes - 92
share=92/(42+92)=69%
```{r, eval=FALSE}
table(df_b$Does.your.business.have.its.own.broadband.internet.connection.)
```

## 2.1 Internet users as a share of individuals

54/411=13%
1-13% = 87%
```{r, eval=FALSE}
table(df$Often_email)
```

```{r, eval=FALSE}
ggplot(d_2.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 85.6, xend = Country, yend = Observations), colour=d_2.1$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(30, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 85.6, color = "black", size=0.5)
```


## 2.2 Share of individuals using the internet to interact with public authorities

Uptake of digital government services
```{r, eval=FALSE}
table(df$Internet_Censo)
table(df$Internet_Setar)
table(df$Internet_SVB)
table(df$Internet_Tax_dep)
table(df$Internet_utilities)
table(df$Internet_Other)

df_y<- df%>%
  filter(Age!="76-111")
  
  
  
df_y$Internet_some <- ifelse(df_y$Internet_Censo=="Censo" | 
                       df_y$Internet_Setar=="Communication (Setar)"|
                       df_y$Internet_SVB=="Pension (SVB)" |
                       df_y$Internet_Tax_dep=="Tax department"|
                       df_y$Internet_utilities=="Utilities (WEB, ELMAR)",
                       "TRUE",
                       "FALSE"
)

table(df_y$Internet_some)
                       
```

```{r, eval=FALSE}
ggplot(d_2.2, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 60.2, xend = Country, yend = Observations), colour=d_2.2$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(25, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 60.2, color = "black", size=0.5)
```

## 2.3 Share of internet users who have purchase online in the last 12 months
no -176
yes - 209
209/(176+209)= 54%
```{r, eval=FALSE}
table(df_y$Internet_purchase)
```

```{r, eval=FALSE}
ggplot(d_2.3, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 69.9, xend = Country, yend = Observations), colour=d_2.3$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(25, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 69.9, color = "black", size=0.5)
```

## 2.4 Share of small businesses making e-commerce sales in the last 12 months
Micro and small grouped together:

No 88+14=102
Yes 17+6=23
=23/102*100=23%

```{r, eval=FALSE}
table(BUS_Select$Has.your.businesses.made.e.commerce.sales.that.sell.across.borders..the.last.year.,BUS_Select$type)
```

```{r, eval=FALSE}
ggplot(d_2.4, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 22.1, xend = Country, yend = Observations), colour=d_2.4$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(0, 60) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 22.1, color = "black", size=0.5)
```

## 2.5 Share of businesses with a web presence
YES - 121
No - 13
121/(13+121)=


Business website: 57, 77
FB page: 30,104
Linkedin: 83,51
Twitter: 117, 17
Instagram: 60, 74
TikTok: 3
Pinterest: 1
```{r, eval=FALSE}
table(df_b$Does.your.business.offer.the.following.web.presence....Business.website)
table(df_b$Does.your.business.offer.the.following.web.presence....Facebook.page)
table(df_b$Does.your.business.offer.the.following.web.presence....Linkedin)
table(df_b$Does.your.business.offer.the.following.web.presence....Twitter)
table(df_b$Does.your.business.offer.the.following.web.presence....Instagram)
table(df_b$Does.your.business.offer.the.following.web.presence....None.of.the.above)
table(df_b$Does.your.business.offer.the.following.web.presence....Other...Other)


df_b$web.presence <- ifelse(df_b$Does.your.business.offer.the.following.web.presence....Business.website=="Business website" | 
                       df_b$Does.your.business.offer.the.following.web.presence....Facebook.page=="Facebook page"|
                       df_b$Does.your.business.offer.the.following.web.presence....Linkedin=="Linkedin" |
                       df_b$Does.your.business.offer.the.following.web.presence....Twitter=="Twitter"|
                       df_b$Does.your.business.offer.the.following.web.presence....Instagram=="Instagram",
                       "TRUE",
                       "FALSE"
)

table(df_b$web.presence)

```

```{r, eval=FALSE}
# Barplot
ggplot(d_2.5_A, aes(x=reorder(`Media`, Share), y=Share)) + 
  geom_bar(stat = "identity", fill="#fc8b9b") +
  coord_flip()+
  geom_text(aes(label = Share), hjust = 1, size=10)+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(color="black", 
                           size=24),
        legend.position="none")
```

```{r, eval=FALSE}
ggplot(d_2.5, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 74.1, xend = Country, yend = Observations), colour=d_2.5$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(25, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 74.1, color = "black", size=0.5)
```

## 2.6 Share of businesses purchasing cloud services
```{r, eval=FALSE}
prop.table(table(df_b$Does.your.business.use.cloud.services.))
```
```{r, eval=FALSE}

```

# Innovation

## 3.1 Share of start-up firms (up to 2 years old) in the business population

new firms < 3 years.

25/(25+109)*100 = 19%
```{r, eval=FALSE}
df_b$new_firms <- ifelse(df_b$For.how.many.years.has.your.business.been.active.conducting.commercial.activity. < 3,"start-up","established")
table(df_b$new_firms)

new_old_firms <- c("start-up firms","established firms")
new_old_firms_values<-c(19,81)


new_old <- data.frame(
  State = c("start-up firms","established firms"),
  Values = c(19,81),
  stringsAsFactors = FALSE)
```

```{r, eval=FALSE}
ggplot(d_3.2, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 25.5, xend = Country, yend = Observations), colour=d_3.2$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(10, 40) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 25.5, color = "black", size=0.5)
```

## 3.2
Bitcoin
```{r}
prop.table(table(df_b$Does.your.business..as.a.means.of.payment..accept.Bitcoin.or.other.cryptocurrency.))
```



# 4 Jobs

## 4.1 Workers recieving employment-based traning, as a percentage of total employment
total mean = 61%
Share
low skilled workers    = 10%
Medium skilled workers = 20%
high skilled workers   = 70%
low skilled workers    = 61%
Medium skilled workers = 76%
High skilled workers   = 83%

(0.1*61)+(0.2*76)+(0.7*83) = 79%

```{r, eval=FALSE}
df_b$What.share.of.employees.are.considered..high.skilled..<-as.numeric(df_b$What.share.of.employees.are.considered..high.skilled..)
df_b$What.share.of.employees.are.considered..low.skilled..<-as.numeric(df_b$What.share.of.employees.are.considered..low.skilled..)
df_b$What.share.of.employees.are.considered..medium.skilled..<-as.numeric(df_b$What.share.of.employees.are.considered..medium.skilled..)



df_b$employee.validity<-(
       df_b$What.share.of.employees.are.considered..high.skilled..+
        df_b$What.share.of.employees.are.considered..low.skilled..+
        df_b$What.share.of.employees.are.considered..medium.skilled..  
)%>%as.numeric()

df_b$employee.validity.check <-
  ifelse(df_b$employee.validity==100,"Valid","Invalid")


df_b$What.percentage.of.high.skilled.workers.receive.employment.based.training.<-as.numeric(df_b$What.percentage.of.high.skilled.workers.receive.employment.based.training.)
df_b$What.percentage.of.low.skilled.workers.receive.employment.based.training.<-as.numeric(df_b$What.percentage.of.low.skilled.workers.receive.employment.based.training.)
df_b$What.percentage.of.medium.skilled.workers.receive.employment.based.training.<-as.numeric(df_b$What.percentage.of.medium.skilled.workers.receive.employment.based.training.)

df_ba<-filter(df_b,employee.validity.check=="Valid")

df_ba$percent.employment.training<- (df_ba$What.share.of.employees.are.considered..high.skilled..*
        df_ba$What.percentage.of.high.skilled.workers.receive.employment.based.training. +
        df_ba$What.share.of.employees.are.considered..low.skilled..* df_ba$What.percentage.of.low.skilled.workers.receive.employment.based.training.+
        df_ba$What.share.of.employees.are.considered..medium.skilled.. *
        df_ba$What.percentage.of.medium.skilled.workers.receive.employment.based.training.)/100
  
mean(df_ba$percent.employment.training)  
mean(df_ba$What.percentage.of.low.skilled.workers.receive.employment.based.training., na.rm = TRUE)
mean(df_ba$What.percentage.of.medium.skilled.workers.receive.employment.based.training., na.rm = TRUE)
mean(df_ba$What.percentage.of.high.skilled.workers.receive.employment.based.training., na.rm = TRUE)


df_bL<-
  filter(df_ba,What.percentage.of.low.skilled.workers.receive.employment.based.training. > 0)
mean(df_bL$What.percentage.of.low.skilled.workers.receive.employment.based.training., na.rm = TRUE)

df_bM<-
  filter(df_ba,What.percentage.of.medium.skilled.workers.receive.employment.based.training. > 0)
mean(df_bM$What.percentage.of.medium.skilled.workers.receive.employment.based.training., na.rm = TRUE)

df_bH<-
  filter(df_ba,What.percentage.of.high.skilled.workers.receive.employment.based.training. > 0)
mean(df_bH$What.percentage.of.high.skilled.workers.receive.employment.based.training., na.rm = TRUE)
```

```{r, eval=FALSE}
# Barplot

gg_skill<- c(61,76,83)
gg_label<- c("Low skilled","Medium skilled","High skilled")
gg_set <- data.frame(gg_skill, gg_label)

ggplot(gg_set, aes(x=reorder(`gg_label`, gg_skill), y=gg_skill)) + 
  geom_bar(stat ="identity", fill="#fc8b9b") +
  coord_flip()+
  geom_text(aes(label = gg_skill), hjust = 1, size=10)+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(color="black", 
                           size=24),
        legend.position="none")
```

```{r}
ggplot(d_4.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 58, xend = Country, yend = Observations), colour=d_4.1$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(30, 80) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 58, color = "black", size=0.5)
```


# 4.2: ICT task-intensive jobs as a percentage of total employment
```{r}
write.csv(BUS_Select, "BUS_Select.csv")
```



# 5. Society

## 5.1 Percentage of individuals aged 55-74 using the Internet
```{r}
table(df$Age, df$access_internet_3_months)
```



no - 21
yes - 364

no=21/(21+364)*100=5.5%
Yes = 1-5.5% = 94.5%

```{r, eval=FALSE}
table(df_y$access_internet_3_months)

ggplot(d_5.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 76.8, xend = Country, yend = Observations), colour=d_5.1$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(40, 100) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 76.8, color = "black", size=0.5)
```


# Society

## 5.3 Women as a share of all 16–24-year-olds who can program

defined age group: 12-25

NO -female - 34
No -male - 25

YES - female - 16
YES - male - 15

Total female: 50
Total male: 40

Yes female: 16/50= 32%
Yes male: 15/40=  38%

```{r, eval=FALSE}
table(df$Age,df$Gender,df$Proficiency_coding)
```

## 5.4

Female: 201/(201+20)= 91%
Male: 171/(18+171)= 90%
Difference -1%

```{r, eval=FALSE}
table(df$Gender,df$access_internet_3_months)
```

## 5.5 Percentage of individuals who use digital equipment at work that telework from home once a week or more

Daily 33
No job 81
Monthly 1
Never 155
Once a week 13
Rarely 76
Several times a week 26


total: 33+1+155+13+76+26=280

once a week or more: 33+13+26=72
72/280=26%

```{r, eval=FALSE}
table(df_y$Frequency_work_from_home_digital_devices)
```

# Trust

## 6.1
Percentage of Internet users experiencing abuse of personal information or privacy violations
No - 326
Yes - 28
Not an internet user - 31
tot - 354
28/354 = 7.9%


No - 331
Yes - 29
Not an internet user - 51
tot - 360
29/360=8.1%


```{r, eval=FALSE}
table(df_y$Experience_privacy_violations) # this is where old people are already filtered out
table(df$Experience_privacy_violations)

ggplot(d_6.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 3.4, xend = Country, yend = Observations), colour=d_6.1$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(0, 10) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 3.35, color = "black", size=0.5)
```


## 6.2
Percentage of individuals not buying online due to payment security concerns
```{r, eval=FALSE}
table(df$Internet_purchase_reason)

ggplot(d_6.2, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 27.2, xend = Country, yend = Observations), colour=d_6.2$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(0, 65) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 27.2, color = "black", size=0.5)
```

## 6.3 
Percentage of individuals not buying online due to concerns about returning products

Inconsistencies with very high observations in the OECD made me drop this from the analaysis. 

## 6.4
Percentage of businesses in which ICT security and data protection tasks are mainly performed by own employees

No - 60
Yes - 74
No = 60/(60+74)= 45.0%
Yes 1-45% = 55%
```{r, eval=FALSE}
table(df_b$Are.the.ICT.security.and.data.protection.tasks.of.your.business.mainly.performed.by.own.employees.)

ggplot(d_6.4, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 23.7, xend = Country, yend = Observations), colour=d_6.4$Colour, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(15, 55) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 23.7, color = "black", size=0.5)
```


# Business survey manipulations

## Data cleaning
```{r, eval=FALSE}
df_b<- df_b%>%
  filter(CompletionStatus !="Partially Completed")


BUS_Select <- df_b%>%
  select(What.is.the.name.of.your.organization.,
         How.many.employees.does.your.business.employ.at.the.moment.,
         Which.sector.best.describes.your.principle.economic.activity.,
         Has.your.businesses.made.e.commerce.sales.that.sell.across.borders..the.last.year.,
         On.average..what.percentage.of.occupational.tasks.of.employees.are.ICT.intensive.
         )
```

Micro | 1-10
Small | 11-50
Medium |51-250
Large |  >250

```{r, eval=FALSE}
# library
library(treemap)
 
# Create data
group <- c("Large 2.2%","Medium  4.5%","Small - 14.9%","Micro - 78.4%")
value <- c(2.2,4.5,14.9,78.4)
tm_data <- data.frame(group,value)
 
# treemap
treemap(tm_data,
            index="group",
            vSize="value",
            type="index",
        fontcolor.labels = "white",
        border.lwds = "2",
        border.col = "white",
        title="",
        palette = c("#fc8b9b","#F6BC65")
            )
```



```{r, eval=FALSE}
BUS_Select$type <- 
  ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment.>=0)&
           (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 10),
         "Micro", 
         ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. >= 11)&
                  (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 50),
                "Small",
                ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. >= 51) & (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 250),"Medium",
ifelse(BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. > 250,"Large","NA")
         )))

table(BUS_Select$type)

```
12


```{r, eval=FALSE}
df_b%>%
  filter(What.share.of.employees.are.considered..low.skilled..!=0"\)%>%
  mean(What.percentage.of.low.skilled.workers.receive.employment.based.training.)
```


Waffle chart
```{r, eval=FALSE}
Blue.text <- element_text(color = "#00006f")
```

```{r, eval=FALSE}
plot_new_old <- ggplot(data = new_old, 
         aes(fill = State, values = Values)) +
  geom_waffle(n_rows = 10, size = 0.5, 
              colour ="#ffffff",
              flip = TRUE) +
  scale_fill_manual(values = c("#e7bd42","#00006f")) +
  coord_equal() +
  theme_minimal() +
  theme_enhance_waffle() +
  labs(title = "% Share new start-ups",
       subtitle = "N=134",
       caption = "Cornerstone Economics (2022)")+
   theme(title = Blue.text, axis.title = Blue.text,text=element_text(family="Franklin Gothic Book"),legend.title = element_blank()
         )
```

Does your business digitally deliver services?
```{r, eval=FALSE}
table(df_b$Does.your.business.digitally.deliver.services.across.borders.)
```

## 7.1
```{r, eval=FALSE}
ggplot(d_7.1, aes(x=reorder(`Country`,Observations), y=Observations, label=Observations)) + 
  geom_point( aes(col=Label), size=12)  +
geom_segment(aes(x = Country, y = 44, xend = Country, yend = Observations), colour=d_7.1$X, size=1)+
  scale_color_manual(name="Compared to average", 
                     labels = c("Above", "Below", "Aruba"), 
                     values = c("Positive"="#fc8b9b", "Negative"="#F6BC65", "Aruba"="#81d7d3")) + 
  geom_text(color="black", size=3.5) +
  ylim(20, 70) +
  coord_flip()+
  theme_classic()+
  theme(axis.text.x=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        axis.line.x = element_blank(),
        axis.ticks = element_blank(),
        legend.position="none",
        axis.text.y = element_text(color="black", 
                           size=12)
        )+ 
  geom_hline(yintercept = 44, color = "black", size=0.5)
```

```{r, eval=FALSE
}
write.csv(BUS_Select,"BUS_Select.csv", row.names = FALSE)
```
