---
title: "Futura survey notebook"
output:
  html_document:
    df_print: paged
---
# Data analysis Futura surveys

## Futura colours we will be using:
Pink: "#fc8b9b" 
Peach: "#F6BC65"



```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(readr)
library(ggplot2)
library(Rmisc)
library(OpenStreetMap)
library(sf)
```

```{r, message=FALSE, warning=FALSE}
#data set pertaining to survey of individuals
df<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/combined.csv")
df<-as_tibble(df)

GAC<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/GAC.csv", stringsAsFactors = FALSE)
GAC<-as_tibble(GAC)

#data set pertaining to survey of businesses
df_b<- read.csv("https://raw.githubusercontent.com/rendell/futura/main/DE_BS.csv", stringsAsFactors = FALSE)
df_b<-as_tibble(df_b)

#requires uploading from the computer untill now have not been able to link to github
shape<- st_read("GAC_Regios_WGS1984.shp")
#To add the regions by colour
shape$region<- c("#fc8b9b","#ffffff","#ffffff","#ffffff","#ffffff","#F6BC65","#F6BC65","#ffffff")
#plot
ggplot() + 
geom_sf(data = shape, size = 0.1, color = "black", fill = shape$region) + 
coord_sf() + theme(panel.background = element_blank(),
                   axis.text.x=element_blank(), #remove x axis labels
        axis.ticks.x=element_blank(), #remove x axis ticks
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank()  #remove y axis ticks
                   )+ ggtitle("Figure X: Broadband divide")+ 
  labs(caption = "Source: Cornerstone Economics 2022")


```

```{r}
df          <- left_join(df,GAC,
                                    by=c("Street"="Straatnaam"))
df$x <- df$POINT_X
df$y <- df$POINT_Y
```

#Actual mapping
```{r}
# extract map
library(ggmap)

# maptype = c("terrain",
#  "terrain-background", "terrain-labels", "terrain-lines", "toner",
#  "toner-2010", "toner-2011", "toner-background", "toner-hybrid",
#  "toner-labels", "toner-lines", "toner-lite", "watercolor")

aruba <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-lite")

aruba1 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-background")

aruba2 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-background")

aruba3 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-labels")

aruba4 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "terrain-lines")

aruba5 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner")

aruba6 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-2010")

aruba7 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-2011")

aruba8 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-hybrid")

aruba9 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-labels")

aruba10 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "toner-lines")

aruba11 <- get_stamenmap(bbox = c(left = -70.175131, 
                                    bottom = 12.40446, 
                                    right = -69.79788, 
                                    top = 12.63056),
                           zoom = 12, 
                           maptype = "watercolor")


ggmap(aruba) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba1) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba2) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba3) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba4) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba5) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )


ggmap(aruba6) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba7) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba8) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba9) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba10) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

ggmap(aruba11) + # the base map
  geom_jitter(position = position_jitter(width = 0.003, height = 0.003),
              data = df, aes(x = x, y = y), 
             color = "#fc8b9b",
             alpha = 7/10)+
  ggtitle("Individual survey responses")  +  
  theme_void()+
  theme(plot.title = element_text(color="#fc8b9b", size=14, face="bold.italic"),
        axis.title.x = element_blank(),
  axis.title.y = element_blank()
  )

```



## Variables
The following variables were prepared:

Nr.  | Variable                              | Code                             | Status     | Comment 
---- | ------------------------------------- | ------------------------------   | ---------- | ------------------
1    | Age range interval                    | age_range                        | Completed  |
2    | Status of completion                  | Completion                       | Pending    |
3    | x                                     | x                                | Pending    |




## Coalesce
```{r, message=False}
p1<- ggplot(df, aes(Age, fill=Gender))+
  geom_bar(stat="count")+
  theme_classic()

Age <- c("12-25","26-44","45-56","57-75","76-111")
Percentage <- c(24,26,19,26,5)

df_age <- data.frame(Age, Percentage)

p2<-ggplot(data=df_age, aes(x=Age, y=Percentage)) +
    geom_bar(colour="#fc8b9b", stat="identity")+
  theme_classic()
```

# gender
```{r}
p1<- df%>%
  filter(Gender !="Prefer not to disclose")%>%
  filter(Age !="")%>%
  ggplot(aes(Age, fill=Gender))+
  geom_bar(stat="count")+
  theme_classic()
```

```{r}
multiplot(p1, p2, cols=2)
```

```{r}
#only display two decimal places
options(digits=2)

prop.table(table(df$Education))

prop.table(table(df$Age))

prop.table(table(df$Internet_home_cable))

#calculate frequency table of proportions for position and points variable
prop.table(table(df$Age, df$Time))
```


# Individual survey indicator dimensions
## 5. Urban-rural broadband divide

San Nicolas
20/(26+7+20)*100=37.7% has no access to broadband at home

Noord / Tanki Leendert
28/(58+28)*100 = 32.6% has no access to broadband at home

Divide:
37.7%-32.6% = 5.1%

```{r}
table(df$Regio, df$Internet_home_cable)
table(df$Regio, df$Internet_home_no_access)
```


## Shape file 
```{r}

```



# Business survey manipulations

## Data cleaning
```{r}
df_b<- df_b%>%
  filter(CompletionStatus !="Partially Completed")


BUS_Select <- df_b%>%
  select(What.is.the.name.of.your.organization.,
         How.many.employees.does.your.business.employ.at.the.moment.,
         Which.sector.best.describes.your.principle.economic.activity.)
```

Micro | 1-10
Small | 11-50
Medium |51-250
Large |  >250

```{r}
BUS_Select$type <- 
  ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment.>=0)&
           (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 10),
         "Micro", 
         ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. >= 11)&
                  (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 50),
                "Small",
                ifelse((BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. >= 51) & (BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. <= 250),"Medium",
ifelse(BUS_Select$How.many.employees.does.your.business.employ.at.the.moment. > 250,"Large","NA")
         )))

table(BUS_Select$type)

```


```{r}
write.csv(BUS_Select,"BUS_Select.csv", row.names = FALSE)
```
